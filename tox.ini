[tox]
requires =
    tox>=4
env_list = build, docs, format, type, py{39,310,311,312}

[testenv]
description = run unit tests
skip_install = {env:TOX_SKIP_INSTALL:false}
deps =
    {env:INGENIALINK_WHEEL_PATH:}
    rpyc == 6.0.0
    pytest==7.0.1
    pytest-cov==2.12.1
    pytest-mock==3.6.1
    pytest-console-scripts==1.4.1
    cython==3.0.11
commands =
    python -m pytest {posargs:tests} --junitxml=pytest_reports/junit-{envname}.xml --junit-prefix={envname}

[testenv:coverage]
description = combine and export coverage report
skip_install = true
deps =
    pytest==7.0.1
    pytest-cov==2.12.1
commands =
    python -m coverage combine {posargs}
    python -m coverage xml --include='*/ingenialink/*'

[testenv:format]
description = check format
skip_install = true
deps =
    ruff==0.9.2
commands =
    ruff format --check {posargs:ingenialink tests virtual_drive}
    ruff check {posargs:ingenialink tests virtual_drive}

[testenv:type]
description = run type checks
deps =
    mypy==1.10.0
commands =
    mypy {posargs:ingenialink virtual_drive examples}

[testenv:docs]
description = build documentation
deps =
    sphinx==7.3.7
    sphinx-rtd-theme==2.0.0
    sphinxcontrib-bibtex==2.6.2
    nbsphinx==0.9.4
    m2r2==0.3.3
    jinja2==3.1.4
commands =
    python -m sphinx -b html {posargs:docs _docs}

[testenv:build]
description = build wheels
env_dir = {toxworkdir}/{env:TOX_BUILD_ENV_DIR:build}
deps =
    wheel==0.42.0
    twine==6.0.1
    cython==3.0.11
    setuptools >= 42; python_version >= '3.12'
basepython = {env:TOX_PYTHON_VERSION:py39}
commands =
    python setup.py {posargs:build sdist --dist-dir={env:TOX_DIST_DIR:dist} bdist_wheel --dist-dir={env:TOX_DIST_DIR:dist}}
    twine check {env:TOX_DIST_DIR:dist}/*

[run]
relative_files=True